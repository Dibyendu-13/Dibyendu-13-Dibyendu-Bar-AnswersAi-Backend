{"ast":null,"code":"var _jsxFileName = \"D:\\\\Backend OpenAI Assignment\\\\frontend\\\\src\\\\components\\\\AskQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AskQuestion = ({\n  API_URL\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [askedQuestion, setAskedQuestion] = useState('');\n  const handleAskQuestion = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      console.log(\"access token:\", accessToken);\n      const response = await axios.post(`${API_URL}/questions`, {\n        question\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log('Question asked:', response.data);\n      setAskedQuestion(response.data.question);\n    } catch (error) {\n      console.error('Error asking question:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Question\",\n      value: question,\n      onChange: e => setQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAskQuestion,\n      children: \"Ask Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), askedQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User asked: \", askedQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AskQuestion, \"ZJzKj/pke533O5vrEqiN1fSruCM=\");\n_c = AskQuestion;\nexport default AskQuestion;\nvar _c;\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AskQuestion","API_URL","_s","question","setQuestion","askedQuestion","setAskedQuestion","handleAskQuestion","accessToken","localStorage","getItem","console","log","response","post","headers","Authorization","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Backend OpenAI Assignment/frontend/src/components/AskQuestion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AskQuestion = ({ API_URL }) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [askedQuestion, setAskedQuestion] = useState('');\r\n  \r\n  const handleAskQuestion = async () => {\r\n    try {\r\n      const accessToken = localStorage.getItem('accessToken');\r\n      console.log(\"access token:\",accessToken);\r\n      const response = await axios.post(\r\n        `${API_URL}/questions`,\r\n        { question },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      console.log('Question asked:', response.data);\r\n      setAskedQuestion(response.data.question);\r\n    } catch (error) {\r\n      console.error('Error asking question:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Ask a Question</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Question\"\r\n        value={question}\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n      />\r\n      <button onClick={handleAskQuestion}>Ask Question</button>\r\n      {askedQuestion && (\r\n        <>\r\n            <p>\r\n        User asked: {askedQuestion}\r\n      </p>\r\n      <p>\r\n        Answer: \r\n      </p>\r\n        </>\r\n    \r\n    )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvDC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACJ,WAAW,CAAC;MACxC,MAAMK,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAC/B,GAAGb,OAAO,YAAY,EACtB;QAAEE;MAAS,CAAC,EACZ;QACEY,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,WAAW;QACtC;MACF,CACF,CAAC;MACDG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAACI,IAAI,CAAC;MAC7CX,gBAAgB,CAACO,QAAQ,CAACI,IAAI,CAACd,QAAQ,CAAC;IAC1C,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAEvB,iBAAkB;MAAAY,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDlB,aAAa,iBACZR,OAAA,CAAAE,SAAA;MAAAoB,QAAA,gBACItB,OAAA;QAAAsB,QAAA,GAAG,cACK,EAACd,aAAa;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACJ1B,OAAA;QAAAsB,QAAA,EAAG;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,eACA,CAEL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEI,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhDIF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}