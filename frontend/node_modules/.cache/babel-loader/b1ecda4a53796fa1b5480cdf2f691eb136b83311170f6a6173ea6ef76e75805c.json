{"ast":null,"code":"var _jsxFileName = \"D:\\\\Backend OpenAI Assignment\\\\frontend\\\\src\\\\components\\\\AskQuestion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AskQuestion = ({\n  API_URL\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [askedQuestion, setAskedQuestion] = useState('');\n  const [answer, setAnswer] = useState('');\n  const handleAskQuestion = async () => {\n    try {\n      const accessToken = localStorage.getItem('accessToken');\n      console.log(\"access token:\", accessToken);\n      const response = await axios.post(`${API_URL}/questions`, {\n        question\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n      console.log('Question asked:', response.data);\n      setAskedQuestion(response.data.question);\n      setAnswer(response.data.answer);\n    } catch (error) {\n      console.error('Error asking question:', error);\n    }\n  };\n  const renderAnswer = text => {\n    const lines = text.split('\\n');\n    let currentList = [];\n    let paragraphs = [];\n    lines.forEach((line, index) => {\n      if (line.trim().startsWith('* ')) {\n        currentList.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: line.slice(2).trim()\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 26\n        }, this));\n      } else {\n        if (currentList.length > 0) {\n          paragraphs.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: currentList\n          }, `list-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 27\n          }, this));\n          currentList = [];\n        }\n        const parts = line.split(/(\\*\\*.*?\\*\\*)/g).map((part, partIndex) => {\n          if (part.startsWith('**') && part.endsWith('**')) {\n            return /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: part.slice(2, -2)\n            }, partIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 20\n            }, this);\n          }\n          return part;\n        });\n        paragraphs.push( /*#__PURE__*/_jsxDEV(\"p\", {\n          children: parts\n        }, `paragraph-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this));\n      }\n    });\n    if (currentList.length > 0) {\n      paragraphs.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: currentList\n      }, `list-end`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }, this));\n    }\n    return paragraphs;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Question\",\n      value: question,\n      onChange: e => setQuestion(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAskQuestion,\n      children: \"Ask Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), askedQuestion && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User asked: \", askedQuestion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Answer:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), renderAnswer(answer)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AskQuestion, \"+VwH4h/ptNVd4PEKNQKoRrEb98A=\");\n_c = AskQuestion;\nexport default AskQuestion;\nvar _c;\n$RefreshReg$(_c, \"AskQuestion\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AskQuestion","API_URL","_s","question","setQuestion","askedQuestion","setAskedQuestion","answer","setAnswer","handleAskQuestion","accessToken","localStorage","getItem","console","log","response","post","headers","Authorization","data","error","renderAnswer","text","lines","split","currentList","paragraphs","forEach","line","index","trim","startsWith","push","children","slice","fileName","_jsxFileName","lineNumber","columnNumber","length","parts","map","part","partIndex","endsWith","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Backend OpenAI Assignment/frontend/src/components/AskQuestion.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AskQuestion = ({ API_URL }) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [askedQuestion, setAskedQuestion] = useState('');\r\n  const [answer, setAnswer] = useState('');\r\n  \r\n  const handleAskQuestion = async () => {\r\n    try {\r\n      const accessToken = localStorage.getItem('accessToken');\r\n      console.log(\"access token:\", accessToken);\r\n      const response = await axios.post(\r\n        `${API_URL}/questions`,\r\n        { question },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      console.log('Question asked:', response.data);\r\n      setAskedQuestion(response.data.question);\r\n      setAnswer(response.data.answer);\r\n    } catch (error) {\r\n      console.error('Error asking question:', error);\r\n    }\r\n  };\r\n\r\n  const renderAnswer = (text) => {\r\n    const lines = text.split('\\n');\r\n    let currentList = [];\r\n    let paragraphs = [];\r\n  \r\n    lines.forEach((line, index) => {\r\n      if (line.trim().startsWith('* ')) {\r\n        currentList.push(<li key={index}>{line.slice(2).trim()}</li>);\r\n      } else {\r\n        if (currentList.length > 0) {\r\n          paragraphs.push(<ul key={`list-${index}`}>{currentList}</ul>);\r\n          currentList = [];\r\n        }\r\n        const parts = line.split(/(\\*\\*.*?\\*\\*)/g).map((part, partIndex) => {\r\n          if (part.startsWith('**') && part.endsWith('**')) {\r\n            return <strong key={partIndex}>{part.slice(2, -2)}</strong>;\r\n          }\r\n          return part;\r\n        });\r\n        paragraphs.push(<p key={`paragraph-${index}`}>{parts}</p>);\r\n      }\r\n    });\r\n  \r\n    if (currentList.length > 0) {\r\n      paragraphs.push(<ul key={`list-end`}>{currentList}</ul>);\r\n    }\r\n  \r\n    return paragraphs;\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Ask a Question</h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Question\"\r\n        value={question}\r\n        onChange={(e) => setQuestion(e.target.value)}\r\n      />\r\n      <button onClick={handleAskQuestion}>Ask Question</button>\r\n      {askedQuestion && (\r\n        <>\r\n          <p>User asked: {askedQuestion}</p>\r\n          <div>\r\n            <h2>Answer:</h2>\r\n            {renderAnswer(answer)}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AskQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}